(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{496:function(_,v,t){"use strict";t.r(v);var a=t(11),r=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("以下回答仅供参考，请根据自己的情况进行修改。")]),_._v(" "),v("h2",{attrs:{id:"_1-非科班出身"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-非科班出身"}},[_._v("#")]),_._v(" 1 非科班出身")]),_._v(" "),v("h3",{attrs:{id:"_1-1-为什么转码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-为什么转码"}},[_._v("#")]),_._v(" 1.1 为什么转码？")]),_._v(" "),v("ul",[v("li",[_._v("对互联网、编程感兴趣，做过编程锻炼和探索")]),_._v(" "),v("li",[_._v("做过项目，有一定的基础")]),_._v(" "),v("li",[_._v("互联网发展飞速，喜欢学习新技术")])]),_._v(" "),v("h3",{attrs:{id:"_1-2-为什么本科-读研不转专业"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-为什么本科-读研不转专业"}},[_._v("#")]),_._v(" 1.2 为什么本科 / 读研不转专业？")]),_._v(" "),v("ul",[v("li",[_._v("当时没有明确职业方向")]),_._v(" "),v("li",[_._v("导师有互联网研究方向与项目，有学习环境")]),_._v(" "),v("li",[_._v("专业与职业发展并不矛盾，职业发展依然需要知识积累")])]),_._v(" "),v("h3",{attrs:{id:"_1-3-相对于科班出身-你有什么优势"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-相对于科班出身-你有什么优势"}},[_._v("#")]),_._v(" 1.3 相对于科班出身，你有什么优势？")]),_._v(" "),v("ul",[v("li",[_._v("学习兴致更浓")]),_._v(" "),v("li",[_._v("实践能力强")]),_._v(" "),v("li",[_._v("自学能力与解决问题能力强")])]),_._v(" "),v("h2",{attrs:{id:"_2-前端选择与学习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-前端选择与学习"}},[_._v("#")]),_._v(" 2 前端选择与学习")]),_._v(" "),v("h3",{attrs:{id:"_2-1-为什么选择前端-不选择后端"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-为什么选择前端-不选择后端"}},[_._v("#")]),_._v(" 2.1 为什么选择前端 / 不选择后端？")]),_._v(" "),v("ul",[v("li",[_._v("喜欢前端“所见即所得”的开发体验")]),_._v(" "),v("li",[_._v("前端技术发展快，喜欢学习新技术")])]),_._v(" "),v("h3",{attrs:{id:"_2-2-前端是什么-如何理解前端"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-前端是什么-如何理解前端"}},[_._v("#")]),_._v(" 2.2 前端是什么 / 如何理解前端？")]),_._v(" "),v("ul",[v("li",[_._v("前端的功能性")]),_._v(" "),v("li",[_._v("前端的高效性")])]),_._v(" "),v("p",[_._v("推荐阅读："),v("RouterLink",{attrs:{to:"/resources/read/what-is-frontend/"}},[_._v("前端是什么，做什么，怎么样")])],1),_._v(" "),v("h3",{attrs:{id:"_2-3-什么时候开始学习前端"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-什么时候开始学习前端"}},[_._v("#")]),_._v(" 2.3 什么时候开始学习前端？")]),_._v(" "),v("h3",{attrs:{id:"_2-4-前端的学习经历"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-前端的学习经历"}},[_._v("#")]),_._v(" 2.4 前端的学习经历？")]),_._v(" "),v("ul",[v("li",[_._v("前端技术栈：前端三大件、前端框架")]),_._v(" "),v("li",[_._v("前端学习过程：快速学习、系统学习、深入学习")]),_._v(" "),v("li",[_._v("前端学习资源：慕课、书籍、b站、文档、教程网站、教程博客、开源社区等")])]),_._v(" "),v("h3",{attrs:{id:"_2-5-你阅读过哪些前端书籍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-你阅读过哪些前端书籍"}},[_._v("#")]),_._v(" 2.5 你阅读过哪些前端书籍？")]),_._v(" "),v("p",[_._v("参考 "),v("RouterLink",{attrs:{to:"/resources/books/"}},[_._v("学习书籍推荐")]),_._v("。")],1),_._v(" "),v("h3",{attrs:{id:"_2-6-接触一个新技术-你是怎么学习的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-接触一个新技术-你是怎么学习的"}},[_._v("#")]),_._v(" 2.6 接触一个新技术，你是怎么学习的？")]),_._v(" "),v("ul",[v("li",[_._v("阅读文档")]),_._v(" "),v("li",[_._v("实践")])]),_._v(" "),v("h3",{attrs:{id:"_2-7-对未来职业发展的规划"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-对未来职业发展的规划"}},[_._v("#")]),_._v(" 2.7 对未来职业发展的规划？")]),_._v(" "),v("ul",[v("li",[_._v("打牢基础")]),_._v(" "),v("li",[_._v("了解底层原理")]),_._v(" "),v("li",[_._v("从前端到全栈")])]),_._v(" "),v("h2",{attrs:{id:"_3-前端技术"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-前端技术"}},[_._v("#")]),_._v(" 3 前端技术")]),_._v(" "),v("h3",{attrs:{id:"_3-1-你了解前端未来的发展趋势吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-你了解前端未来的发展趋势吗"}},[_._v("#")]),_._v(" 3.1 你了解前端未来的发展趋势吗？")]),_._v(" "),v("ul",[v("li",[_._v("前端新标准")]),_._v(" "),v("li",[_._v("前端框架的轻量化、模块化，MVVM 模式")]),_._v(" "),v("li",[_._v("低代码、AI 技术")]),_._v(" "),v("li",[_._v("跨平台技术，如 Flutter、React Native 等")]),_._v(" "),v("li",[_._v("泛前端，如 Serverless、全栈等")])]),_._v(" "),v("p",[_._v("推荐阅读："),v("a",{attrs:{href:"https://blog.csdn.net/m0_66557301/article/details/126070237",target:"_blank",rel:"noopener noreferrer"}},[_._v("2022年前端技术发展趋势 - CSDN"),v("OutboundLink")],1)]),_._v(" "),v("h3",{attrs:{id:"_3-2-什么是微前端-它用来解决什么问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-什么是微前端-它用来解决什么问题"}},[_._v("#")]),_._v(" 3.2 什么是微前端？它用来解决什么问题？")]),_._v(" "),v("p",[_._v("微前端是一种多个团队通过独立发布功能的方式来共同构建现代化 web 应用的技术手段及方法策略。")]),_._v(" "),v("p",[_._v("微前端借鉴了微服务的架构理念，将一个庞大的前端应用拆分为多个独立灵活的小型应用，每个应用都可以独立开发、独立运行、独立部署，再将这些小型应用联合为一个完整的应用。微前端既可以将多个项目融合为一，又可以减少项目之间的耦合，提升项目扩展性，相比一整块的前端仓库，微前端架构下的前端仓库倾向于更小更灵活。")]),_._v(" "),v("p",[_._v("特点：")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("技术栈无关")]),_._v("：主框架不限制接入应用的技术栈，子应用可自主选择技术栈")]),_._v(" "),v("li",[v("strong",[_._v("独立开发/部署")]),_._v("：各个团队之间仓库独立，单独部署，互不依赖")]),_._v(" "),v("li",[v("strong",[_._v("增量升级")]),_._v("：当一个应用庞大之后，技术升级或重构相当麻烦，而微应用具备渐进式升级的特性")]),_._v(" "),v("li",[v("strong",[_._v("独立运行时")]),_._v("：微应用之间运行时互不依赖，有独立的状态管理")]),_._v(" "),v("li",[v("strong",[_._v("提升效率")]),_._v("：应用越庞大，越难以维护，协作效率越低下，微应用可以很好拆分，提升效率")])]),_._v(" "),v("h3",{attrs:{id:"_3-3-目前微前端有哪些实现方案-你们为什么选择了这种方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-目前微前端有哪些实现方案-你们为什么选择了这种方案"}},[_._v("#")]),_._v(" 3.3 目前微前端有哪些实现方案？你们为什么选择了这种方案？")]),_._v(" "),v("ul",[v("li",[_._v("基于 iFrame 的微前端方案\n"),v("ul",[v("li",[_._v("优点：简单易用，完美隔离，不限制使用")]),_._v(" "),v("li",[_._v("缺点：无法保持路由，交互困难，加载慢")])])]),_._v(" "),v("li",[_._v("基于 single-spa 的微前端方案：路由劫持")]),_._v(" "),v("li",[_._v("基于阿里 qiankun 的微前端方案：封装 single-spa\n"),v("ul",[v("li",[_._v("优点：HTML Entry 接入简单，样式隔离，沙箱隔离，资源预加载")]),_._v(" "),v("li",[_._v("缺点：文档较少，不能解决子项目污染主项目的问题")])])]),_._v(" "),v("li",[_._v("基于京东 micro-app 的微前端方案：借鉴 Web Component 思想")])])])}),[],!1,null,null,null);v.default=r.exports}}]);